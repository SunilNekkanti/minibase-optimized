#LyX 1.4.2 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass article
\language spanish
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry true
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1cm
\topmargin 3cm
\rightmargin 1cm
\bottommargin 3cm
\headheight 2cm
\headsep 2cm
\footskip 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\end_header

\begin_body

\begin_layout Section
Herramienta de carga de datos
\end_layout

\begin_layout Subsection
Descripción general
\end_layout

\begin_layout Standard
La clase Utility provee de algunas funcionalidades para interactuar con
 la base de datos sin tener que ocuparse de detalles de bajo nivel.
 Las tres utilidades provistas por esta clase son las siguientes:
\end_layout

\begin_layout Enumerate
Insertar un registro en una tabla
\end_layout

\begin_layout Enumerate
Borrar uno (o más) registro(s) de una tabla
\end_layout

\begin_layout Enumerate
Cargar un archivo con registros (en formato ASCII) en una tabla
\end_layout

\begin_layout Standard
La primera de las funcionalidades inserta un registro en una tabla actualizando
 los índices existentes sobre dicha tabla.
 Esta funcionalidad está implementada en en el método 
\emph on
insertRecUT
\emph default
 el cual toma como parámetros el nombre de la tabla en donde se debe insertar
 el registro y una lista con los nombres de los campos y sus respectivos
 valores (un array de 
\emph on
attrNode
\emph default
).
 Previamente a la inserción del registro, esta función verifica que el tipo
 de los valores pasados como parámetro coincidan con los tipos especificados
 en el catálogo para la tabla en cuestión, así como también si se viola
 la clave primara (de existir sobre la tabla).
\end_layout

\begin_layout Standard
La utilidad de carga inserta los registros contenidos en un archivo ASCII
 donde además se especifican los campos de tabla con sus respectivos tipos
 y longitudes (en la primer fila).
 Esta funcionalidad está implementada en el método 
\emph on
loadUT
\emph default
 el cual toma como parámetros el nombre de la tabla y el nombre del archivo
 que contiene los registros.
 Para realizar la inserción de los registros utiliza la funcionalidad anterior
 (con la tabla especificada y los campos de la misma tomados del catálogo).
 Si la relación no existe se crea, y si ya existe, se introducen los nuevos
 registros.
 
\end_layout

\begin_layout Standard
Por lo general los motores de bases de datos crean un índice sobre los atributos
 primary key, en este caso se decidió no hacerlo ya que se trató de reducir
 los problemas de consistencia con el resto del código.
 O sea, en Minibase es posible, en ciertas condiciones, crear una relación
 con atributos pk y sin índice sobre ellos, se prefirió adoptar esa postura.
\end_layout

\begin_layout Subsection
Interacción con otros componentes
\end_layout

\begin_layout Standard
La utilidad de carga interactúa fuertemente con la componente de catalogo
 para la inserción de los registros y para la creación de las relaciones.
\end_layout

\begin_layout Subsection
Ejemplos de uso
\end_layout

\begin_layout Standard
Para cargar una tabla desde un archivo simplemente se utiliza la función
 
\emph on
loadUT
\emph default
 del paquete 
\emph on
Utility
\emph default
 de la siguiente manera:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

Utility.loadUt("nombre relación","nombre archivo");
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El formato del archivo de carga es el siguiente:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

atributo1:String30:pk  atributo2:Integer  atributo3:Real
\end_layout

\begin_layout Standard

Juan Domingo  1  2.0
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La separación entre las columnas es el carácter tab, esto permite establecer
 
\begin_inset Quotes eld
\end_inset

Juan Domingo
\begin_inset Quotes erd
\end_inset

 como atributo1, ya que el tab establece el fin de la columna.
 En este ejemplo tenemos una tabla con un registro (Juan Domingo, 1, 2.0)
 en una tabla con un atributo de tipo String, de tamaño 30 y primary key
 y otros dos de tipo entero y real respectivamente.
 El tipo puede contener minúsculas y/o mayúsculas.
 En el caso de String el tamaño se toma el valor que le sigue inmediatamente.
\end_layout

\end_body
\end_document
