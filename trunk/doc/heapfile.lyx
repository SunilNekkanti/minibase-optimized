#LyX 1.4.2 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass article
\begin_preamble

\end_preamble
\language spanish
\inputencoding latin1
\fontscheme default
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry true
\use_amsmath 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1cm
\topmargin 3cm
\rightmargin 1cm
\bottommargin 3cm
\headheight 2cm
\headsep 2cm
\footskip 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\end_header

\begin_body

\begin_layout Section
HeapFile
\end_layout

\begin_layout Subsection
Descripción general
\end_layout

\begin_layout Standard
Es un archivo desordenado.
 Cada registro en el archivo tiene un rid( record id ) único y cada página
 en el archivo es del mismo tamaño.
 El rid es una concatenación del id de la página donde está ubicado el registro
 y el slot en donde se encuentra dicho registro dentro de la página.
 Además permite la creación de un scan para poder recorrer todos los registros
 de un archivo heap, repitiendo solicitudes para el próximo registro.
 También mantiene un registro de las páginas que tienen espacio libre para
 implementar la inserción eficientemente.
\end_layout

\begin_layout Subsubsection
Diseño interno-estructuras
\end_layout

\begin_layout Standard
Heapfile mantiene una estructura de información sobre las páginas de datos
 llamada directorio de páginas Esta estructura está implementada como una
 lista doblemente enlazada compuesta por páginas del tipo HFPage.
 Cada entrada en una página del directorio de páginas, contiene la siguiente
 información: id de la página, espacio libre y la cantidad de registros
 que esa página contiene.
 Cada una de estas entradas, apunta a una página de datos, la cual contiene
 los registros.
 Entonces, una página de directorio almacena información sobre muchas páginas
 de datos.
\end_layout

\begin_layout Standard
Las páginas de datos del HeapFile también son del tipo HFPage, están implementad
as como páginas con slots.
 Cada una de éstas páginas contiene los slots al inicio, con información
 sobre los registros( longitud, offset, tipo, etc ) registros al final y
 espacio libre en el medio ( si es que hay ).
\end_layout

\begin_layout Standard
La primer página del directorio de páginas, es la página de cabecera( header
 page ) para todo el heapfile.
 Para recordar donde está ubicada esta página, se mantiene por medio de
 DM, un conjunto de tuplas <nom_BD, 1er_pag_del_dir_de_datos>
\end_layout

\begin_layout Subsection
Clases principales y sus protocolos principales
\end_layout

\begin_layout Subsubsection
Heapfile
\end_layout

\begin_layout Standard
Heapfile tiene métodos para devolver eficientemente la cantidad de registros
 que tiene el HeapFile, para insertar un registro.
 Al crear un Heapfile, se asegura que el nombre no exista y asignándole
 un nombre único.
\end_layout

\begin_layout Standard

\emph on
Búsqueda de un determinado registro
\end_layout

\begin_layout Enumerate
Empieza a recorrer las páginas del directorio.
\end_layout

\begin_layout Enumerate
Por cada registro de la página de directorio actual obtiene el id de la
 página a la que apunta.
\end_layout

\begin_layout Enumerate
Llama a BM para obtener esa página.
\end_layout

\begin_layout Enumerate
Verifica si el rid buscado coincide con el id de esta página( recordemos
 que el rid es una concatenación del id de página y el slot en dónde se
 encuentra el registro ) 
\end_layout

\begin_layout Standard

\emph on
Inserción de registros:
\end_layout

\begin_layout Enumerate
Empieza a recorrer las páginas del directorio, buscando alguna página de
 datos que contenga espacio suficiente.
\end_layout

\begin_layout Enumerate
Si no encontró espacio disponible: crea una nueva página de datos ( por
 medio del BM ), crea una entrada para esta página en el directorio de páginas
 ( ídem ).
\end_layout

\begin_layout Enumerate
Inserta el registro y modifica los valores de la entrada para esa página
 en el directorio de páginas.
\end_layout

\begin_layout Enumerate
Persiste la página( por medio del BM ).
\end_layout

\begin_layout Standard

\emph on
Eliminación de un registro:
\end_layout

\begin_layout Enumerate
Busca la página de datos del registro y la página de directorio que apunta
 a éste.
\end_layout

\begin_layout Enumerate
Actualiza la página de directorio.
 
\end_layout

\begin_layout Enumerate
Si la cantidad de registros de la página de datos es cero, la elimina.
\end_layout

\begin_layout Enumerate
Borra el registro y modifica los valores de la entrada para esa página en
 el directorio de páginas.
\end_layout

\begin_layout Subsubsection
HFPage
\end_layout

\begin_layout Standard
Representa una página dividida en slots.
 Se utilizan slots al principio que indican la información del registro(
 longitud, offset, tipo, número de slot, etc ).
 Los registros se guardan al final.
 Cuando se borra un registro, se elimina el registro físicamente y en la
 información del slot, se establece su tamaño en un valor negativo.
 Por lo tanto, el número de slots en uso no se modifica.
 Esto se hace para no perder los números de rid( recordemos que este número
 está asociado a la posición del registro slot ).
 El diseño asume que los registros se compactan cuando se realiza un borrado
 ( no los slots ).
 HFPage guarda información sobre el número de slots en uso y el número de
 bytes libres.
\end_layout

\begin_layout Standard

\emph on
Insertar un registro:
\end_layout

\begin_layout Enumerate
Se fija si hay lugar disponible para el registro nuevo.
\end_layout

\begin_layout Enumerate
Busca un slot marcado como borrado ( longitud negativa )
\end_layout

\begin_layout Enumerate
Si no lo encuentra, crea uno nuevo.
\end_layout

\begin_layout Enumerate
Inserta la información del slot( número de slot, longitud del registro,
 offset del registro, etc )
\end_layout

\begin_layout Enumerate
Inserta el registro en la página y devuelve su rid ( número de pagina concatenad
o con número de slot )
\end_layout

\begin_layout Standard

\emph on
Eliminar un registro:
\end_layout

\begin_layout Enumerate
Obtiene el número de slot por su rid.
\end_layout

\begin_layout Enumerate
Elimina el registro ( hace un shift hacia la derecha, de todo lo anterior
 a ese registro )
\end_layout

\begin_layout Enumerate
Actualiza los offsets de todos los registros anteriores a éste.
\end_layout

\begin_layout Enumerate
Incrementa el espacio libre de la página.
\end_layout

\begin_layout Enumerate
Marca el slot como libre ( establece la longitud del registro como negativa
 )
\end_layout

\begin_layout Subsection
Interacción con otros componentes
\end_layout

\begin_layout Standard
HeapFile interactúa fuertemente con BufferManager, para obtener y guardar
 las páginas.
\end_layout

\end_body
\end_document
