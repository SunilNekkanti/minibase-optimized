#LyX 1.4.2 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass article
\language spanish
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry true
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1cm
\topmargin 3cm
\rightmargin 1cm
\bottommargin 3cm
\headheight 2cm
\headsep 2cm
\footskip 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\end_header

\begin_body

\begin_layout Section
Herramienta de carga de datos
\end_layout

\begin_layout Subsection
Descripción general
\end_layout

\begin_layout Standard
La componente de carga de datos, es simplemente un parser de archivos separados
 por tabs.
 Esta componente permite la creación y carga de relaciones de una manera
 simple y comoda.
\end_layout

\begin_layout Standard
El formato especificado permite establecer el nombre, tipo y si es primary
 key de los atributos en la relación.
 Si la relación no existe se crea, y si ya existe, se introducen los nuevos
 registros.
 Por lo general los motores de bases de datos crean un indice sobre los
 atributos primary key, en este caso se decidió no hacerlo ya que se trató
 de reducir los problemas de consistencia con el resto del codigo.
 O sea, en Minibase es posible, en ciertas condiciones, crear una relación
 con atributos pk y sin indice sobre ellos, se prefirió adoptar esa postura.
\end_layout

\begin_layout Subsection
Interacción con otros componentes
\end_layout

\begin_layout Standard
La utilidad de carga interactua fuertemente con la componente de catalogo
 para la insercion de los registros y para la creación de las relaciones.
\end_layout

\begin_layout Subsection
Ejemplos de uso
\end_layout

\begin_layout Standard
Para cargar una tabla desde un archivo simplemente se utiliza la funcion
 
\emph on
loadRecordsUT
\emph default
 del paquete 
\emph on
Utility
\emph default
 de la siguiente manera:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Utility.loadRecordsUt(
\begin_inset Quotes eld
\end_inset

nombre relacion
\begin_inset Quotes erd
\end_inset

,
\begin_inset Quotes erd
\end_inset

nombre archivo
\begin_inset Quotes erd
\end_inset

);
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El formato del archivo de carga es el siguiente:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\begin_layout Standard

atributo1:String30:pk  atributo2:Integer  atributo3:Real
\end_layout

\begin_layout Standard

Juan Domingo  1  2.0
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La separacion entre las columnas es el caracter tab, esto permite establecer
 
\begin_inset Quotes eld
\end_inset

Juan Domingo
\begin_inset Quotes erd
\end_inset

 como atributo1, ya que el tab establece el fin de la columna.
 En este ejemplo tenemos una tabla con un registro (Juan Domingo, 1, 2.0)
 en una tabla con un atributo de tipo String, de tamaño 30 y primary key
 y otros dos de tipo entero y real respectivamente.
 El tipo puede contener minusculas y/o mayusculas.
 En el caso de String el tamaño se toma el valor que le sigue inmediatamente.
\end_layout

\end_body
\end_document
