#LyX 1.4.2 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass article
\begin_preamble

\end_preamble
\language spanish
\inputencoding latin1
\fontscheme default
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\end_header

\begin_body

\begin_layout Section
DiskManager
\end_layout

\begin_layout Subsection
Descripción general
\end_layout

\begin_layout Standard
Se encarga de crear, abrir, cerrar o borrar una base de datos, que no es
 otra cosa que un archivo en el disco.
 Provee diversos métodos para acceder a las páginas en el disco y manejar
 el Space Map, que sirve para saber cuáles páginas están siendo utilizadas.
 También permite mantener el nombre y la ubicación de los archivos lógicos
 de la base, manejando el Directorio de Archivos.
 
\end_layout

\begin_layout Subsection
Clases principales y sus protocolos principales
\end_layout

\begin_layout Subsubsection
Clase Page
\end_layout

\begin_layout Standard
Funciona como un buffer para guardar una página en memoria al momento de
 leer o escribir de disco, o para su utilización temporal.
\end_layout

\begin_layout Subsubsection
Clase DBHeaderPage
\end_layout

\begin_layout Standard
Se encarga de reflejar el formato de una página cualquiera del Directorio
 de Archivos y provee ciertas funcionalidades tanto para modificar como
 para leer los datos de estas páginas.
\end_layout

\begin_layout Subsubsection
Clase DB
\end_layout

\begin_layout Standard
Esta es la clase que se encarga de ser la interfaz del Disk Manager.
 Exporta la funcionalidad de crear, abrir, cerrar o borrar una base de datos.
 La unidad mínima física de lectura y escritura en Minibase es una página
 y, por lo tanto, el archivo está dividido en varias páginas.
 El tamaño de una de ellas está dado por una constante, por lo que esta
 clase no provee un método para inicializarlo; en este caso, es de 1024
 bytes.
\end_layout

\begin_layout Subsubsection
Space Map
\end_layout

\begin_layout Standard
El mapa de bits representa, usando un bit por página, si una página de la
 base de datos está siendo utilizada o no.
 Como en Minibase las páginas ocupan 1024 bytes, entonces podremos llevar
 registro de 8 * 1024 páginas, por cada página que utilice el Space Map.
 Por supuesto, las páginas usadas por el Space Map son marcadas como usadas.
\end_layout

\begin_layout Standard
El bit enésimo significa:
\end_layout

\begin_layout Itemize
0: La página enésima esta libre.
 
\end_layout

\begin_layout Itemize
1: La página enésima esta utilizada.
\end_layout

\begin_layout Standard
Como esta estructura no es una lista enlazada y como la primer página que
 no pertenece al Space Map en sí es justamente la primera inmediata que
 le sucede, entonces el Space Map como estructura de datos no puede crecer
 una vez creado.
 Por ende, la cantidad de páginas del Space Map es fija, la cantidad de
 páginas que se pueden reservar queda acotada y el tamaño de la base de
 datos queda acotado como consecuencia.
 Por ejemplo, si se desea crear una base de datos de 2000 páginas, entonces
 se necesitará sólo una página de Space Map para marcarlas.
\end_layout

\begin_layout Subsubsection
Directorio de Archivos
\end_layout

\begin_layout Standard
El directorio de archivos es una lista simplemente encadenada de páginas,
 en donde se guarda la siguiente información:
\end_layout

\begin_layout Itemize
PageID de la próxima página del Directorio.
 En la última página, este valor es INVALID_PAGE (-1).
 Ocupa 4 bytes.
 
\end_layout

\begin_layout Itemize
Cantidad de Entries que entran en la página.
 Ocupa 4 bytes.
 
\end_layout

\begin_layout Itemize
PageID de la primer página del archivo.
 Ocupa 4 bytes.
 
\end_layout

\begin_layout Itemize
Nombre del archivo.
 Ocupa 52 bytes.
 
\end_layout

\begin_layout Itemize
Cantidad total de páginas de la base de datos.
 Este atributo figura sólo en la primera página del Directorio.
 
\end_layout

\begin_layout Standard
Este formato de página se encuentra reflejado en la clase DBHeaderPage,
 y es heredado por las clases DBFirstPage, que se encarga del formato de
 la primer página, y por DBDirectoryPage, que se encarga de las demás páginas
 del directorio.
\end_layout

\begin_layout Standard
Es bueno resaltar que tanto el Directorio como el Space Map son parte del
 archivo de la base de datos.
 Y la página 0 siempre es la primera página del Directorio.
 
\end_layout

\begin_layout Subsection
Interacción con otros componentes
\end_layout

\begin_layout Standard
Sería útil aclarar que el Disk Manager actúa tanto como productor de datos
 para el Buffer Manager que como consumidor de éste último.
 Como productor, recibe pedidos de lectura y escritura de páginas y se las
 suministra o recibe del BM.
 Como consumidor, utiliza al BM como cache para las páginas de su estructura
 interna, es decir, las del Space Map y las del Directorio.
 Es decir: todas las funciones que recorren el Diccionario de Archivos o
 el Space Map utilizan al Buffer Manager para trabajar en memoria.
 Esto lo realizan con las funciones pinPage y unPinPage.
\end_layout

\begin_layout Subsection
Ejemplo de uso
\end_layout

\begin_layout Standard
Abrir un archivo de base de datos existente con un nombre dado.
\end_layout

\begin_layout Enumerate
Abre el archivo con ese nombre para lectura y escritura.
\end_layout

\begin_layout Enumerate
Como toda base de datos tiene al menos una página, inicializa la cantidad
 de páginas en 1.
 Pide un PinPage al Buffer Manager de la página 0, pues utiliza de entrada
 el BM como cache.
 El BM, en consecuencia, le pide al DM, en modo productor que lea la página
 0.
\end_layout

\begin_layout Enumerate
Una vez leída del disco la página 0, se la da al BM.
 El BM le devuelve la página al DM (quien actúa nuevamente en modo consumidor
 del cache).
 Ahora sí, extrae la cantidad total de páginas verdadera y la actualiza.
 Luego, hace un UnPinPage de la página 0 y la marca como undirty, ya que
 no escribió nada en ella.
 
\end_layout

\begin_layout Standard

\end_layout

\end_body
\end_document
